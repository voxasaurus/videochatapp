{"ast":null,"code":"var _jsxFileName = \"C:\\\\codes\\\\projects\\\\videochatapp\\\\client\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport io from 'socket.io-client';\nimport UserContext from '../UserContext'; // Import UserContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet socket;\nfunction Chat() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chat, setChat] = useState([]);\n  const {\n    user\n  } = useContext(UserContext);\n  useEffect(() => {\n    if (!user) {\n      console.warn(\"User is not logged in. Please log in to join the chat.\");\n      return;\n    }\n    socket = io('http://localhost:5000');\n    socket.on('previous_messages', messages => {\n      console.log('Received previous messages', messages);\n      setChat(messages);\n    });\n    socket.on('receive_message', message => {\n      console.log('Received a new message', message);\n      setChat(oldChat => [...oldChat, message]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [user]); // Added user as a dependency so it reconnects when user logs in\n\n  const sendMessage = () => {\n    if (!user) {\n      console.warn(\"You must be logged in to send messages.\");\n      return;\n    }\n    if (message && user) {\n      const newMessage = {\n        username: user.username,\n        message\n      };\n      console.log('Sending a new message', newMessage);\n      socket.emit('send_message', newMessage);\n      setMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        height: '300px',\n        overflowY: 'scroll'\n      },\n      children: chat.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [msg.username, \": \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      onKeyPress: handleKeyPress // Added an onKeyPress handler to handle the Enter key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), !user && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"Please log in to join the chat.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, this), \"  // Display a message urging the user to log in if they are not logged in\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n}\n_s(Chat, \"n2UwoakX8o+IFWzurqgZI42MAn0=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useContext","io","UserContext","jsxDEV","_jsxDEV","socket","Chat","_s","message","setMessage","chat","setChat","user","console","warn","on","messages","log","oldChat","disconnect","sendMessage","newMessage","username","emit","handleKeyPress","e","key","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","height","overflowY","map","msg","index","type","value","onChange","target","onKeyPress","onClick","color","_c","$RefreshReg$"],"sources":["C:/codes/projects/videochatapp/client/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport io from 'socket.io-client';\r\nimport UserContext from '../UserContext';  // Import UserContext\r\n\r\nlet socket;\r\n\r\nfunction Chat() {\r\n    const [message, setMessage] = useState('');\r\n    const [chat, setChat] = useState([]);\r\n    const { user } = useContext(UserContext);\r\n  \r\n    useEffect(() => {\r\n      if(!user) {\r\n        console.warn(\"User is not logged in. Please log in to join the chat.\");\r\n        return;\r\n      }\r\n      \r\n      socket = io('http://localhost:5000');\r\n  \r\n      socket.on('previous_messages', (messages) => {\r\n        console.log('Received previous messages', messages);\r\n        setChat(messages);\r\n      });\r\n  \r\n      socket.on('receive_message', (message) => {\r\n        console.log('Received a new message', message);\r\n        setChat((oldChat) => [...oldChat, message]);\r\n      });\r\n  \r\n      return () => {\r\n        socket.disconnect();\r\n      };\r\n    }, [user]);  // Added user as a dependency so it reconnects when user logs in\r\n  \r\n    const sendMessage = () => {\r\n      if(!user) {\r\n        console.warn(\"You must be logged in to send messages.\");\r\n        return;\r\n      }\r\n  \r\n      if (message && user) {\r\n        const newMessage = { username: user.username, message };\r\n        console.log('Sending a new message', newMessage);\r\n        socket.emit('send_message', newMessage);\r\n        setMessage('');\r\n      }\r\n    };\r\n  \r\n    const handleKeyPress = (e) => {\r\n      if (e.key === 'Enter') {\r\n        sendMessage();\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <h2>Chat</h2>\r\n        <div style={{\r\n          border: '1px solid #ccc',\r\n          padding: '10px',\r\n          height: '300px',\r\n          overflowY: 'scroll',\r\n        }}>\r\n          {chat.map((msg, index) => (\r\n            <p key={index}>{msg.username}: {msg.message}</p>\r\n          ))}\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyPress={handleKeyPress}  // Added an onKeyPress handler to handle the Enter key\r\n        />\r\n        <button onClick={sendMessage}>Send</button>\r\n        {!user && <p style={{ color: 'red' }}>Please log in to join the chat.</p>}  // Display a message urging the user to log in if they are not logged in\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Chat;\r\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,WAAW,MAAM,gBAAgB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,IAAIC,MAAM;AAEV,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAEc;EAAK,CAAC,GAAGZ,UAAU,CAACE,WAAW,CAAC;EAExCH,SAAS,CAAC,MAAM;IACd,IAAG,CAACa,IAAI,EAAE;MACRC,OAAO,CAACC,IAAI,CAAC,wDAAwD,CAAC;MACtE;IACF;IAEAT,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;IAEpCI,MAAM,CAACU,EAAE,CAAC,mBAAmB,EAAGC,QAAQ,IAAK;MAC3CH,OAAO,CAACI,GAAG,CAAC,4BAA4B,EAAED,QAAQ,CAAC;MACnDL,OAAO,CAACK,QAAQ,CAAC;IACnB,CAAC,CAAC;IAEFX,MAAM,CAACU,EAAE,CAAC,iBAAiB,EAAGP,OAAO,IAAK;MACxCK,OAAO,CAACI,GAAG,CAAC,wBAAwB,EAAET,OAAO,CAAC;MAC9CG,OAAO,CAAEO,OAAO,IAAK,CAAC,GAAGA,OAAO,EAAEV,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC;IAEF,OAAO,MAAM;MACXH,MAAM,CAACc,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC,CAAC,CAAE;;EAEb,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAG,CAACR,IAAI,EAAE;MACRC,OAAO,CAACC,IAAI,CAAC,yCAAyC,CAAC;MACvD;IACF;IAEA,IAAIN,OAAO,IAAII,IAAI,EAAE;MACnB,MAAMS,UAAU,GAAG;QAAEC,QAAQ,EAAEV,IAAI,CAACU,QAAQ;QAAEd;MAAQ,CAAC;MACvDK,OAAO,CAACI,GAAG,CAAC,uBAAuB,EAAEI,UAAU,CAAC;MAChDhB,MAAM,CAACkB,IAAI,CAAC,cAAc,EAAEF,UAAU,CAAC;MACvCZ,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,MAAMe,cAAc,GAAIC,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBN,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACb3B,OAAA;MAAK4B,KAAK,EAAE;QACVC,MAAM,EAAE,gBAAgB;QACxBC,OAAO,EAAE,MAAM;QACfC,MAAM,EAAE,OAAO;QACfC,SAAS,EAAE;MACb,CAAE;MAAAT,QAAA,EACCjB,IAAI,CAAC2B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACnBnC,OAAA;QAAAuB,QAAA,GAAgBW,GAAG,CAAChB,QAAQ,EAAC,IAAE,EAACgB,GAAG,CAAC9B,OAAO;MAAA,GAAnC+B,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkC,CAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN3B,OAAA;MACEoC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEjC,OAAQ;MACfkC,QAAQ,EAAGjB,CAAC,IAAKhB,UAAU,CAACgB,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MAC5CG,UAAU,EAAEpB,cAAe,CAAE;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACF3B,OAAA;MAAQyC,OAAO,EAAEzB,WAAY;MAAAO,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC1C,CAACnB,IAAI,iBAAIR,OAAA;MAAG4B,KAAK,EAAE;QAAEc,KAAK,EAAE;MAAM,CAAE;MAAAnB,QAAA,EAAC;IAA+B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAAC,4EAC5E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACxB,EAAA,CAvEMD,IAAI;AAAAyC,EAAA,GAAJzC,IAAI;AAyEX,eAAeA,IAAI;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}